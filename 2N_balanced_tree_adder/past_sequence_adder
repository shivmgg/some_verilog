#! /usr/bin/vvp
:ivl_version "0.9.7 " "(v0_9_7)";
:vpi_time_precision - 12;
:vpi_module "system";
:vpi_module "v2005_math";
:vpi_module "va_math";
S_0x2651750 .scope module, "past_sequnce_adder_tb" "past_sequnce_adder_tb" 2 5;
 .timescale -12 -12;
P_0x2677568 .param/l "TB_CLK_PERIOD" 2 10, +C4<011111010000>;
P_0x2677590 .param/l "TB_RST_PERIOD" 2 11, +C4<0111110100000>;
P_0x26775b8 .param/l "TB_TIMEOUT" 2 9, +C4<011000011010100000>;
v0x2693310_0 .net "inps", 9 0, L_0x2693560; 1 drivers
v0x26933c0_0 .net "outp", 9 0, L_0x2693b00; 1 drivers
v0x2693490_0 .var "tb_clk", 0 0;
S_0x2650b30 .scope module, "my_adder" "past_sequence_adder_test" 2 27, 3 1, S_0x2651750;
 .timescale 0 0;
P_0x2667ff8 .param/l "N" 3 4, +C4<0100>;
P_0x2668020 .param/l "data_width" 3 3, +C4<01010>;
L_0x2693560 .functor BUFZ 10, v0x2693100_0, C4<0000000000>, C4<0000000000>, C4<0000000000>;
v0x2693030_0 .net "clk", 0 0, v0x2693490_0; 1 drivers
v0x2693100_0 .var "count", 9 0;
v0x26931b0_0 .alias "outp", 9 0, v0x26933c0_0;
v0x2693260_0 .alias "outp_inps", 9 0, v0x2693310_0;
S_0x2650c70 .scope module, "my_past_sequence_adder" "past_sequence_adder" 3 26, 4 1, S_0x2650b30;
 .timescale 0 0;
P_0x26680a8 .param/l "DW" 4 4, +C4<01010>;
P_0x26680d0 .param/l "N" 4 3, +C4<0100>;
L_0x2693b00 .functor BUFZ 10, L_0x26938c0, C4<0000000000>, C4<0000000000>, C4<0000000000>;
v0x2664140_0 .alias "clk", 0 0, v0x2693030_0;
v0x26903a0_0 .net "inp", 9 0, v0x2693100_0; 1 drivers
v0x2690440_0 .var "j", 10 0;
v0x26904e0_0 .var "k", 10 0;
v0x2690590_0 .alias "outp", 9 0, v0x26933c0_0;
v0x2690630 .array "regs", 256 1, 9 0;
v0x2692ee0 .array "sums", 4 0;
v0x2692ee0_0 .net v0x2692ee0 0, 9 0, C4<zzzzzzzzzz>; 0 drivers
v0x2692ee0_1 .net v0x2692ee0 1, 9 0, L_0x26939e0; 1 drivers
v0x2692ee0_2 .net v0x2692ee0 2, 9 0, L_0x2693660; 1 drivers
v0x2692ee0_3 .net v0x2692ee0 3, 9 0, L_0x2693770; 1 drivers
v0x2692ee0_4 .net v0x2692ee0 4, 9 0, L_0x26938c0; 1 drivers
E_0x26507f0 .event posedge, v0x2664140_0;
v0x2690630_0 .array/port v0x2690630, 0;
L_0x26939e0 .arith/sum 10, v0x2690630_0, v0x2693100_0;
S_0x2664ac0 .scope generate, "sum_loop[2]" "sum_loop[2]" 4 18, 4 18, S_0x2650c70;
 .timescale 0 0;
P_0x2677f48 .param/l "i" 4 18, +C4<010>;
v0x2690630_17 .array/port v0x2690630, 17;
L_0x2693660 .arith/sum 10, L_0x26939e0, v0x2690630_17;
S_0x26649d0 .scope generate, "sum_loop[3]" "sum_loop[3]" 4 18, 4 18, S_0x2650c70;
 .timescale 0 0;
P_0x26781a8 .param/l "i" 4 18, +C4<011>;
v0x2690630_35 .array/port v0x2690630, 35;
L_0x2693770 .arith/sum 10, L_0x2693660, v0x2690630_35;
S_0x2664f80 .scope generate, "sum_loop[4]" "sum_loop[4]" 4 18, 4 18, S_0x2650c70;
 .timescale 0 0;
P_0x2679a28 .param/l "i" 4 18, +C4<0100>;
v0x2690630_71 .array/port v0x2690630, 71;
L_0x26938c0 .arith/sum 10, L_0x2693770, v0x2690630_71;
    .scope S_0x2650c70;
T_0 ;
    %wait E_0x26507f0;
    %load/v 8, v0x26903a0_0, 10;
    %ix/load 3, 0, 0; address
    %ix/load 0, 10, 0; word width
    %ix/load 1, 0, 0; part off
    %assign/av v0x2690630, 0, 8;
t_0 ;
    %movi 8, 2, 11;
    %set/v v0x2690440_0, 8, 11;
T_0.0 ;
    %load/v 8, v0x2690440_0, 11;
    %mov 19, 0, 1;
   %cmpi/u 8, 4, 12;
    %or 5, 4, 1;
    %jmp/0xz T_0.1, 5;
    %movi 8, 1, 11;
    %set/v v0x26904e0_0, 8, 11;
T_0.2 ;
    %load/v 8, v0x26904e0_0, 11;
    %mov 19, 0, 21;
    %movi 40, 2, 32;
    %load/v 72, v0x2690440_0, 11;
    %movi 83, 0, 21;
    %subi 72, 1, 32;
    %pow/s 40, 72, 32;
    %cmp/u 8, 40, 32;
    %or 5, 4, 1;
    %jmp/0xz T_0.3, 5;
    %load/v 8, v0x26904e0_0, 11;
    %mov 19, 0, 1;
    %cmpi/u 8, 1, 12;
    %jmp/0xz  T_0.4, 4;
    %load/v 18, v0x2690440_0, 11;
    %movi 29, 0, 21;
    %subi 18, 1, 32;
    %ix/get 3, 18, 32;
    %load/av 8, v0x2692ee0, 10;
    %movi 50, 2, 11;
    %ix/load 0, 4, 0;
    %load/vp0 61, v0x2690440_0, 11;
    %subi 61, 2, 11;
    %pow/s 50, 61, 11;
    %load/v 61, v0x26904e0_0, 11;
    %add 50, 61, 11;
    %mov 18, 50, 11;
    %mov 29, 0, 1;
    %mov 30, 0, 20;
    %subi 18, 1, 32;
    %ix/get/s 3, 18, 32;
    %jmp/1 t_1, 4;
    %ix/load 0, 10, 0; word width
    %ix/load 1, 0, 0; part off
    %assign/av v0x2690630, 0, 8;
t_1 ;
    %jmp T_0.5;
T_0.4 ;
    %movi 51, 2, 32;
    %ix/load 0, 4, 0;
    %load/vp0 83, v0x2690440_0, 32;
    %subi 83, 2, 32;
    %pow/s 51, 83, 32;
    %load/v 83, v0x26904e0_0, 11;
    %movi 94, 0, 21;
    %add 51, 83, 32;
    %subi 51, 1, 32;
    %mov 18, 51, 32;
    %mov 50, 0, 1;
    %subi 18, 1, 33;
    %ix/get/s 3, 18, 33;
    %load/av 8, v0x2690630, 10;
    %movi 50, 2, 11;
    %ix/load 0, 4, 0;
    %load/vp0 61, v0x2690440_0, 11;
    %subi 61, 2, 11;
    %pow/s 50, 61, 11;
    %load/v 61, v0x26904e0_0, 11;
    %add 50, 61, 11;
    %mov 18, 50, 11;
    %mov 29, 0, 1;
    %mov 30, 0, 20;
    %subi 18, 1, 32;
    %ix/get/s 3, 18, 32;
    %jmp/1 t_2, 4;
    %ix/load 0, 10, 0; word width
    %ix/load 1, 0, 0; part off
    %assign/av v0x2690630, 0, 8;
t_2 ;
T_0.5 ;
    %load/v 8, v0x26904e0_0, 11;
    %mov 19, 0, 21;
    %addi 8, 1, 32;
    %set/v v0x26904e0_0, 8, 11;
    %jmp T_0.2;
T_0.3 ;
    %load/v 8, v0x2690440_0, 11;
    %mov 19, 0, 21;
    %addi 8, 1, 32;
    %set/v v0x2690440_0, 8, 11;
    %jmp T_0.0;
T_0.1 ;
    %jmp T_0;
    .thread T_0;
    .scope S_0x2650b30;
T_1 ;
    %set/v v0x2693100_0, 0, 10;
    %end;
    .thread T_1;
    .scope S_0x2650b30;
T_2 ;
    %wait E_0x26507f0;
    %load/v 8, v0x2693100_0, 10;
    %mov 18, 0, 22;
    %addi 8, 1, 32;
    %ix/load 0, 10, 0;
    %assign/v0 v0x2693100_0, 0, 8;
    %jmp T_2;
    .thread T_2;
    .scope S_0x2651750;
T_3 ;
    %delay 100000, 0;
    %vpi_call 2 13 "$finish";
    %end;
    .thread T_3;
    .scope S_0x2651750;
T_4 ;
    %set/v v0x2693490_0, 0, 1;
    %end;
    .thread T_4;
    .scope S_0x2651750;
T_5 ;
    %delay 1000, 0;
    %load/v 8, v0x2693490_0, 1;
    %inv 8, 1;
    %set/v v0x2693490_0, 8, 1;
    %jmp T_5;
    .thread T_5;
    .scope S_0x2651750;
T_6 ;
    %wait E_0x26507f0;
    %vpi_call 2 34 "$display", "inps = ", v0x2693310_0, " => outp = ", v0x26933c0_0;
    %jmp T_6;
    .thread T_6;
# The file index is used to find the file name in the following table.
:file_names 5;
    "N/A";
    "<interactive>";
    "past_sequence_adder_tb.v";
    "past_sequence_adder_test.v";
    "past_sequence_adder.v";
