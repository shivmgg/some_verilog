#! /usr/bin/vvp
:ivl_version "0.9.7 " "(v0_9_7)";
:vpi_time_precision - 12;
:vpi_module "system";
:vpi_module "v2005_math";
:vpi_module "va_math";
S_0x143a6e0 .scope module, "balanced_adder_tb" "balanced_adder_tb" 2 5;
 .timescale -12 -12;
P_0x144fdd8 .param/l "TB_CLK_PERIOD" 2 10, +C4<011111010000>;
P_0x144fe00 .param/l "TB_RST_PERIOD" 2 11, +C4<0111110100000>;
P_0x144fe28 .param/l "TB_TIMEOUT" 2 9, +C4<011000011010100000>;
v0x146a220_0 .net "inps", 31 0, L_0x146a470; 1 drivers
v0x146a2d0_0 .net "outp", 11 0, v0x1469e00_0; 1 drivers
v0x146a3a0_0 .var "tb_clk", 0 0;
S_0x144fb00 .scope module, "my_adder" "balanced_adder_test" 2 28, 3 1, S_0x143a6e0;
 .timescale 0 0;
P_0x143f798 .param/l "N" 3 4, +C4<011>;
P_0x143f7c0 .param/l "data_width" 3 3, +C4<0100>;
L_0x146a470 .functor BUFZ 32, v0x146a010_0, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>;
v0x1469f70_0 .net "clk", 0 0, v0x146a3a0_0; 1 drivers
v0x146a010_0 .var "count", 31 0;
v0x146a0c0_0 .alias "outp", 11 0, v0x146a2d0_0;
v0x146a170_0 .alias "outp_inps", 31 0, v0x146a220_0;
S_0x144fbf0 .scope module, "my_past_sequence_adder" "balance_tree_adder" 3 26, 4 1, S_0x144fb00;
 .timescale 0 0;
P_0x143f848 .param/l "DW" 4 4, +C4<0100>;
P_0x143f870 .param/l "N" 4 3, +C4<011>;
v0x143a210 .array "arra", 7 0;
v0x143a210_0 .net v0x143a210 0, 3 0, L_0x146a570; 1 drivers
v0x143a210_1 .net v0x143a210 1, 3 0, L_0x146a610; 1 drivers
v0x143a210_2 .net v0x143a210 2, 3 0, L_0x146a740; 1 drivers
v0x143a210_3 .net v0x143a210 3, 3 0, L_0x146a7e0; 1 drivers
v0x143a210_4 .net v0x143a210 4, 3 0, L_0x146a8b0; 1 drivers
v0x143a210_5 .net v0x143a210 5, 3 0, L_0x146a980; 1 drivers
v0x143a210_6 .net v0x143a210 6, 3 0, L_0x146ab60; 1 drivers
v0x143a210_7 .net v0x143a210 7, 3 0, L_0x146ac00; 1 drivers
v0x1469a90_0 .alias "clk", 0 0, v0x1469f70_0;
v0x1469b30_0 .net "inp", 31 0, v0x146a010_0; 1 drivers
v0x1469bd0_0 .var "j", 10 0;
v0x1469c80_0 .var "k", 2 0;
v0x1469d20_0 .var "m", 10 0;
v0x1469e00_0 .var "outp", 11 0;
v0x1469ea0 .array "regs", 8 2, 11 0;
E_0x143b9c0 .event posedge, v0x1469a90_0;
L_0x146a570 .part v0x146a010_0, 0, 4;
L_0x146a610 .part v0x146a010_0, 4, 4;
L_0x146a740 .part v0x146a010_0, 8, 4;
L_0x146a7e0 .part v0x146a010_0, 12, 4;
L_0x146a8b0 .part v0x146a010_0, 16, 4;
L_0x146a980 .part v0x146a010_0, 20, 4;
L_0x146ab60 .part v0x146a010_0, 24, 4;
L_0x146ac00 .part v0x146a010_0, 28, 4;
S_0x14406b0 .scope generate, "input_partition[0]" "input_partition[0]" 4 21, 4 21, S_0x144fbf0;
 .timescale 0 0;
P_0x144b368 .param/l "i" 4 21, +C4<00>;
S_0x14405c0 .scope generate, "input_partition[1]" "input_partition[1]" 4 21, 4 21, S_0x144fbf0;
 .timescale 0 0;
P_0x144b748 .param/l "i" 4 21, +C4<01>;
S_0x14404d0 .scope generate, "input_partition[2]" "input_partition[2]" 4 21, 4 21, S_0x144fbf0;
 .timescale 0 0;
P_0x144b918 .param/l "i" 4 21, +C4<010>;
S_0x14403e0 .scope generate, "input_partition[3]" "input_partition[3]" 4 21, 4 21, S_0x144fbf0;
 .timescale 0 0;
P_0x144a508 .param/l "i" 4 21, +C4<011>;
S_0x14402f0 .scope generate, "input_partition[4]" "input_partition[4]" 4 21, 4 21, S_0x144fbf0;
 .timescale 0 0;
P_0x14527c8 .param/l "i" 4 21, +C4<0100>;
S_0x1452030 .scope generate, "input_partition[5]" "input_partition[5]" 4 21, 4 21, S_0x144fbf0;
 .timescale 0 0;
P_0x14533d8 .param/l "i" 4 21, +C4<0101>;
S_0x1451f40 .scope generate, "input_partition[6]" "input_partition[6]" 4 21, 4 21, S_0x144fbf0;
 .timescale 0 0;
P_0x14504b8 .param/l "i" 4 21, +C4<0110>;
S_0x1451e50 .scope generate, "input_partition[7]" "input_partition[7]" 4 21, 4 21, S_0x144fbf0;
 .timescale 0 0;
P_0x1450088 .param/l "i" 4 21, +C4<0111>;
    .scope S_0x144fbf0;
T_0 ;
    %wait E_0x143b9c0;
    %ix/load 3, 0, 0;
    %mov 4, 0, 1;
    %load/av 8, v0x1469ea0, 12;
    %ix/load 3, 1, 0;
    %mov 4, 0, 1;
    %load/av 20, v0x1469ea0, 12;
    %add 8, 20, 12;
    %ix/load 0, 12, 0;
    %assign/v0 v0x1469e00_0, 0, 8;
    %movi 8, 1, 11;
    %set/v v0x1469bd0_0, 8, 11;
T_0.0 ;
    %load/v 8, v0x1469bd0_0, 11;
    %mov 19, 0, 1;
   %cmpi/u 8, 1, 12;
    %or 5, 4, 1;
    %jmp/0xz T_0.1, 5;
    %set/v v0x1469c80_0, 0, 3;
T_0.2 ;
    %load/v 8, v0x1469c80_0, 3;
    %mov 11, 0, 30;
    %movi 41, 2, 33;
    %load/v 74, v0x1469bd0_0, 11;
    %movi 85, 0, 22;
    %pow/s 41, 74, 33;
    %subi 41, 1, 33;
    %cmp/u 8, 41, 33;
    %or 5, 4, 1;
    %jmp/0xz T_0.3, 5;
    %movi 52, 2, 6;
    %ix/load 0, 1, 0;
    %load/vp0 58, v0x1469bd0_0, 6;
    %pow/s 52, 58, 6;
    %load/v 58, v0x1469c80_0, 3;
    %mov 61, 0, 3;
    %muli 58, 2, 6;
    %add 52, 58, 6;
    %mov 20, 52, 6;
    %mov 26, 0, 1;
    %mov 27, 0, 25;
    %subi 20, 2, 32;
    %ix/get/s 3, 20, 32;
    %load/av 8, v0x1469ea0, 12;
    %movi 65, 2, 32;
    %ix/load 0, 1, 0;
    %load/vp0 97, v0x1469bd0_0, 32;
    %pow/s 65, 97, 32;
    %load/v 97, v0x1469c80_0, 3;
    %movi 100, 0, 29;
    %muli 97, 2, 32;
    %add 65, 97, 32;
    %addi 65, 1, 32;
    %mov 32, 65, 32;
    %mov 64, 0, 1;
    %subi 32, 2, 33;
    %ix/get/s 3, 32, 33;
    %load/av 20, v0x1469ea0, 12;
    %add 8, 20, 12;
    %movi 52, 2, 3;
    %load/v 55, v0x1469bd0_0, 3;
    %pow/s 52, 55, 3;
    %load/v 55, v0x1469c80_0, 3;
    %add 52, 55, 3;
    %mov 20, 52, 3;
    %mov 23, 0, 1;
    %mov 24, 0, 28;
    %subi 20, 2, 32;
    %ix/get/s 3, 20, 32;
    %jmp/1 t_0, 4;
    %ix/load 0, 12, 0; word width
    %ix/load 1, 0, 0; part off
    %assign/av v0x1469ea0, 0, 8;
t_0 ;
    %load/v 8, v0x1469c80_0, 3;
    %mov 11, 0, 29;
    %addi 8, 1, 32;
    %set/v v0x1469c80_0, 8, 3;
    %jmp T_0.2;
T_0.3 ;
    %load/v 8, v0x1469bd0_0, 11;
    %mov 19, 0, 21;
    %addi 8, 1, 32;
    %set/v v0x1469bd0_0, 8, 11;
    %jmp T_0.0;
T_0.1 ;
    %set/v v0x1469d20_0, 0, 11;
T_0.4 ;
    %load/v 8, v0x1469d20_0, 11;
    %mov 19, 0, 22;
   %cmpi/u 8, 3, 33;
    %or 5, 4, 1;
    %jmp/0xz T_0.5, 5;
    %load/v 20, v0x1469d20_0, 11;
    %mov 31, 0, 3;
    %muli 20, 2, 14;
    %ix/get 3, 20, 14;
    %load/av 8, v0x143a210, 4;
    %mov 12, 0, 8;
    %load/v 32, v0x1469d20_0, 11;
    %movi 43, 0, 21;
    %muli 32, 2, 32;
    %addi 32, 1, 32;
    %ix/get 3, 32, 32;
    %load/av 20, v0x143a210, 4;
    %mov 24, 0, 8;
    %add 8, 20, 12;
    %ix/load 0, 4, 0;
    %load/vp0 53, v0x1469d20_0, 32;
    %mov 20, 53, 32;
    %mov 52, 0, 1;
    %subi 20, 2, 33;
    %ix/get/s 3, 20, 33;
    %jmp/1 t_1, 4;
    %ix/load 0, 12, 0; word width
    %ix/load 1, 0, 0; part off
    %assign/av v0x1469ea0, 0, 8;
t_1 ;
    %load/v 8, v0x1469d20_0, 11;
    %mov 19, 0, 21;
    %addi 8, 1, 32;
    %set/v v0x1469d20_0, 8, 11;
    %jmp T_0.4;
T_0.5 ;
    %jmp T_0;
    .thread T_0;
    .scope S_0x144fb00;
T_1 ;
    %set/v v0x146a010_0, 0, 32;
    %end;
    .thread T_1;
    .scope S_0x144fb00;
T_2 ;
    %movi 8, 32, 32;
    %set/v v0x146a010_0, 8, 32;
    %end;
    .thread T_2;
    .scope S_0x144fb00;
T_3 ;
    %wait E_0x143b9c0;
    %load/v 8, v0x146a010_0, 32;
    %mov 40, 0, 1;
    %addi 8, 1, 33;
    %ix/load 0, 32, 0;
    %assign/v0 v0x146a010_0, 0, 8;
    %jmp T_3;
    .thread T_3;
    .scope S_0x143a6e0;
T_4 ;
    %delay 100000, 0;
    %vpi_call 2 13 "$finish";
    %end;
    .thread T_4;
    .scope S_0x143a6e0;
T_5 ;
    %set/v v0x146a3a0_0, 0, 1;
    %end;
    .thread T_5;
    .scope S_0x143a6e0;
T_6 ;
    %delay 1000, 0;
    %load/v 8, v0x146a3a0_0, 1;
    %inv 8, 1;
    %set/v v0x146a3a0_0, 8, 1;
    %jmp T_6;
    .thread T_6;
    .scope S_0x143a6e0;
T_7 ;
    %wait E_0x143b9c0;
    %vpi_call 2 35 "$display", "inps = ", v0x146a220_0, " => outp = ", v0x146a2d0_0;
    %jmp T_7;
    .thread T_7;
# The file index is used to find the file name in the following table.
:file_names 5;
    "N/A";
    "<interactive>";
    "balanced_adder_tb.v";
    "balanced_adder_test.v";
    "balanced_tree_adder.v";
